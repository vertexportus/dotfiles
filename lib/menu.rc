#!/usr/bin/env bash

#   This menu code is based on a script by Ingo Hollmann
#
#   Copyright (C) 2017 Ingo Hollmann - All Rights Reserved
# Permission to copy and modify is granted under the Creative Commons Attribution 4.0 license
#

menu_cursor=0
draw_menu() {
    menu=($@)
    for i in "${menu[@]}"; do
        if [[ ${menu[$menu_cursor]} == $i ]]; then
            tput setaf 2; echo " > $i"; tput sgr0
        else
            echo "   $i";
        fi
    done
}

clear_menu() {
    menu=($@)
    for i in "${menu[@]}"; do tput cuu1; done
    tput ed
}

# Draw initial Menu
start_menu() {
    menu=($@)
    draw_menu ${menu[@]}
    while read -rsn1 key; do # 1 char (not delimiter), silent
        # Check for enter/space
        if [[ -z "$key" ]]; then break; fi

        # catch multi-char special key sequences
        read -sN1 -t 0.0001 k1; read -sN1 -t 0.0001 k2; read -sN1 -t 0.0001 k3
        key+=${k1}${k2}${k3}

        case "$key" in
            # cursor up, left: previous item
            i|j|$'\e[A'|$'\e0A'|$'\e[D'|$'\e0D') ((menu_cursor > 0)) && ((menu_cursor--));;
            # cursor down, right: next item
            k|l|$'\e[B'|$'\e0B'|$'\e[C'|$'\e0C') ((menu_cursor < ${#menu[@]}-1)) && ((menu_cursor++));;
            # home: first item
            $'\e[1~'|$'\e0H'|$'\e[H')  menu_cursor=0;;
            # end: last item
            $'\e[4~'|$'\e0F'|$'\e[F') ((menu_cursor=${#menu[@]}-1));;
            # q, carriage return: quit
            q|''|$'\e') echo "Aborted." && exit;;
        esac
        # Redraw menu
        clear_menu ${menu[@]}
        draw_menu ${menu[@]}
    done
}